
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;
import "GameObject.sol";
//import "MilitaryBase.sol";
// This is class that describes you smart contract.
abstract contract MilitaryUnit is GameObject {
    address internal addressMilitaryBase;
    // constructor(address castle) public {
    //     addressMilitaryBase = castle;
    // }
    function hurtYourself(uint v) external override{
        tvm.accept();
        if (v<=getDefense()) return;
        if (getCurHp()<=v-getDefense()){
            toDie(msg.sender, 666, true);
            return;
        }
        setCurHp(v-getDefense());
    }   
    function commonAttack(InterfaceGameObject enemy) internal{
        tvm.accept();
        enemy.hurtYourself(getAttack());
    }

   // function dieTogether(address dest, uint128 value, bool bounce) virtual external override;
    function dieTogether(address dest, uint128 value, bool bounce) external override{
        require(msg.sender==addressMilitaryBase,104);
        tvm.accept();
        toDie(dest, 666, bounce);
    }
    
}
